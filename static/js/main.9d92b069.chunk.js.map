{"version":3,"sources":["logo.svg","context/index.tsx","layout/PageContainer/index.tsx","helpers/session-storage.ts","context/events.ts","routing/routing.enum.ts","routing/PrivateRoute/PrivateRoute.tsx","components/Forms/LineInput/LineInput.tsx","components/Forms/PasswordInput/PasswordInput.tsx","components/Forms/Validation/useForm.ts","helpers/index.ts","components/Login/validation/validation.schema.ts","components/Login/Login.tsx","pages/Login/index.tsx","routing/LoadingRoute/LoadingRoute.tsx","routing/Content/index.tsx","layout/Header/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","context","StoreRender","PageContainer","title","paragraph","children","className","SPQ_SESSION_STORAGE","load","key","JSON","parse","sessionStorage","getItem","RoutingEnum","actions","events","action","state","params","data","setItem","stringify","save","token","removeItem","login","fakeAuth","PrivateRoute","Component","component","rest","render","props","to","pathname","from","location","LineInputComponent","value","type","label","name","error","placeholder","onChange","data-test","defaultValue","e","PasswordInputComponent","useForm","stateSchema","validationSchema","callback","useState","setState","disable","setDisable","isDirty","setIsDirty","useEffect","validateState","useCallback","Object","keys","some","isInputFieldRequired","required","stateValue","stateError","handleOnChange","event","target","isObject","validator","RegExp","isRegExp","regEx","Error","test","prevState","handleOnSubmit","preventDefault","validationStateSchema","username","password","LoginComponent","onSubmit","disabled","handleLoginSubmit","console","log","LoginPage","LoadingRoute","nprogress","start","done","Content","exact","path","home","about","private","store","Header","src","logo","alt","App","GlobalStore","initialState","Consumer","_state","dispatch","React","createContext","Provider","createStore","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d92b069.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, {\n  ComponentProps,\n  Context,\n  SetStateAction,\n  useState\n} from 'react';\n\nlet context: Context<any>;\nlet dispatcher: SetStateAction<any>;\nlet StoreProvider: Function;\nlet StoreRender: Function;\n\nexport const createStore = ({\n  initialState = {},\n  events = (...args: any): SetStateAction<any> => {}\n}) => {\n  StoreProvider = ({ ...children }: any) => {\n    const [state, setState] = useState(initialState);\n\n    dispatcher = (action: any, params: any): SetStateAction<any> => {\n      setState(events(action, state, params));\n    };\n\n    const _state = {\n      state: state,\n      dispatch: dispatcher\n    };\n\n    context = React.createContext(_state);\n\n    return (\n      <context.Provider value={_state}>{children.children}</context.Provider>\n    );\n  };\n\n  StoreRender = (props: ComponentProps<any>) => {\n    return context ? (\n      <context.Consumer>{props.children}</context.Consumer>\n    ) : (\n      <div />\n    );\n  };\n\n  return {\n    StoreRender: StoreRender,\n    GlobalStore: StoreProvider\n  };\n};\n\nexport const withStore = (Component: any) => {\n  return () => {\n    return (\n      <StoreRender>\n        {(props: ComponentProps<any>) => {\n          return <Component store={props} />;\n        }}\n      </StoreRender>\n    );\n  };\n};\n","import React from 'react';\n\nexport interface PageContainerProps {\n  title?: string;\n  paragraph?: string;\n}\n\nexport const PageContainer: React.FC<PageContainerProps> = ({\n  title,\n  paragraph,\n  children\n}) => (\n  <div className=\"container\">\n    {title && <h2>{title}</h2>}\n    {paragraph && <p>{paragraph}</p>}\n    {children}\n  </div>\n);\n","export const SPQ_SESSION_STORAGE = {\n  TOKEN: 'SPQ_USER_TOKEN'\n  // APPLICATION: 'ACP_CURRENT_APPLICATION'\n};\n\nexport function save(key: any, data: any, isJSON = true) {\n  isJSON\n    ? sessionStorage.setItem(key, JSON.stringify(data))\n    : sessionStorage.setItem(key, data);\n}\n\nexport function load(key: any, isJSON = true) {\n  return isJSON\n    ? JSON.parse(sessionStorage.getItem(key) as any)\n    : sessionStorage.getItem(key);\n}\n\nexport function remove(key: any) {\n  sessionStorage.removeItem(key);\n}\n\nexport function clear() {\n  sessionStorage.clear();\n}\n","import { SPQ_SESSION_STORAGE, remove, save } from '../helpers/session-storage';\n\nconst actions = {\n  login: 'login',\n  logout: 'logout'\n  // saveApplication: \"saveApplication\"\n};\n\nexport const events = (action: any, state: any, params: any) => {\n  switch (action) {\n    case actions.login:\n      save(SPQ_SESSION_STORAGE.TOKEN, params.token, false);\n      return { ...state, token: params.token };\n    case actions.logout:\n      remove(SPQ_SESSION_STORAGE.TOKEN);\n      return { ...state, login: false };\n    // case actions.saveApplication:\n    //   save(SPQ_SESSION_STORAGE.APPLICATION, params.application);\n    //   return { ...state, application: params.application };\n    default:\n      return { state };\n  }\n};\n","export enum RoutingEnum {\n  login = '/login',\n  home = '/',\n  about = '/about',\n  private = '/private'\n}\n","import React from 'react';\nimport { Route, Redirect, BrowserRouterProps } from 'react-router-dom';\n\nimport { RoutingEnum } from '../routing.enum';\n\nexport interface PrivateRouteProps extends BrowserRouterProps {\n  component: React.FC;\n  path: string;\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb: any) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb: any) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props: any) =>\n        fakeAuth.isAuthenticated ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: RoutingEnum.login,\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","import React from 'react';\n\nexport interface LineInputComponentProps {\n  value?: string;\n  type?: string;\n  onChange?: Function;\n  placeholder?: string;\n  label: string;\n  name: string;\n  error: string;\n}\n\nexport const LineInputComponent: React.FC<LineInputComponentProps> = ({\n  value,\n  type,\n  label,\n  name,\n  error,\n  placeholder,\n  onChange\n}) => {\n  return (\n    <div className=\"line-input-component\">\n      <label className=\"line-input-component__label\">\n        <span className=\"line-input-component__label-text\">{label}</span>\n        <input\n          data-test=\"username\"\n          className=\"line-input-component__input\"\n          name={name}\n          type={type}\n          defaultValue={value}\n          placeholder={placeholder}\n          onChange={e => onChange && onChange(e)}\n        />\n        {error && <small className=\"line-input-component__error\">{error}</small>}\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface PasswordInputComponentProps {\n  value?: string;\n  type?: string;\n  onChange?: Function;\n  placeholder?: string;\n  label: string;\n  name: string;\n  error: string;\n}\n\nexport const PasswordInputComponent: React.FC<PasswordInputComponentProps> = ({\n  value,\n  type,\n  label,\n  name,\n  error,\n  placeholder,\n  onChange\n}) => {\n  return (\n    <div className=\"password-input-component\">\n      <label className=\"password-input-component__label\">\n        <span className=\"password-input-component__label-text\">{label}</span>\n        <input\n          data-test=\"password\"\n          className=\"password-input-component__input\"\n          name={name}\n          type={type}\n          defaultValue={value}\n          placeholder={placeholder}\n          onChange={e => onChange && onChange(e)}\n        />\n        {error && <small className=\"line-input-component__error\">{error}</small>}\n      </label>\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { isObject, isRegExp } from '../../../helpers';\n\nexport function useForm(\n  stateSchema: any = {},\n  validationSchema: any = {},\n  callback: Function\n) {\n  const [state, setState] = useState(stateSchema);\n  const [disable, setDisable] = useState(true);\n  const [isDirty, setIsDirty] = useState(false);\n\n  useEffect(() => {\n    setDisable(true);\n  }, []);\n\n  const validateState = useCallback(() => {\n    return Object.keys(validationSchema).some((key: any) => {\n      const isInputFieldRequired: boolean = validationSchema[key].required;\n      const stateValue = state[key].value;\n      const stateError = state[key].error;\n\n      return (isInputFieldRequired && !stateValue) || stateError;\n    });\n  }, [state, validationSchema]);\n\n  useEffect(() => {\n    if (isDirty) {\n      setDisable(validateState());\n    }\n  }, [state, isDirty, validateState]);\n\n  const handleOnChange = useCallback(\n    event => {\n      setIsDirty(true);\n\n      const name = event.target.name;\n      const value = event.target.value;\n\n      let error = '';\n      if (validationSchema[name] && validationSchema[name].required) {\n        if (!value) {\n          error = 'This is required field.';\n        }\n      }\n\n      if (validationSchema[name] && isObject(validationSchema[name].validator)) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\");\n        }\n\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          error = validationSchema[name].validator.error;\n        }\n      }\n\n      setState((prevState: any) => ({\n        ...prevState,\n        [name]: { value, error }\n      }));\n    },\n    [validationSchema]\n  );\n\n  const handleOnSubmit = useCallback(\n    event => {\n      event.preventDefault();\n\n      if (!validateState()) {\n        callback(state);\n      }\n    },\n    [callback, state, validateState]\n  );\n\n  return { handleOnChange, handleOnSubmit, state, disable };\n}\n","export function isObject(value: any) {\n  return value !== null && typeof value === 'object';\n}\n\nexport function isRegExp(value: any) {\n  return value instanceof RegExp;\n}\n","import { LoginFormValidationSchema } from './validation.model';\n\nexport const validationStateSchema: LoginFormValidationSchema = {\n  username: {\n    required: true,\n    validator: {\n      regEx: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      // TODO: enum\n      error: 'Invalid email address'\n    }\n  },\n  password: {\n    required: true,\n    validator: {\n      regEx: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n      // TODO: enum\n      error: 'Min 8 characters, at least 1 letter and 1 number'\n    }\n  }\n};\n","import React from 'react';\n\nimport { LineInputComponent } from '../Forms/LineInput/LineInput';\nimport { PasswordInputComponent } from '../Forms/PasswordInput/PasswordInput';\nimport { useForm } from '../Forms/Validation/useForm';\nimport { validationStateSchema } from './validation/validation.schema';\n\ninterface LoginComponentProps {\n  onSubmit?: Function;\n}\n\ninterface LoginComponentState {\n  username?: InputState;\n  password?: InputState;\n}\n\ninterface InputState {\n  value: string;\n  error: string;\n}\n\nconst stateSchema: LoginComponentState = {\n  username: { value: '', error: '' },\n  password: { value: '', error: '' }\n};\n\nexport const LoginComponent: React.FC<LoginComponentProps> = ({ onSubmit }) => {\n  const { state, handleOnChange, handleOnSubmit, disable } = useForm(\n    stateSchema,\n    validationStateSchema,\n    onSubmit as Function\n  );\n\n  return (\n    <div className=\"login-component\">\n      <form onSubmit={handleOnSubmit}>\n        <LineInputComponent\n          label=\"Email\"\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"Your Email\"\n          value={state.username.value}\n          error={state.username.error}\n          onChange={handleOnChange}\n        />\n        <PasswordInputComponent\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Please enter your password\"\n          value={state.password.value}\n          error={state.password.error}\n          onChange={handleOnChange}\n        />\n        <div className=\"login-component__button-container\">\n          <button\n            className=\"login-component__submit-button\"\n            disabled={disable}\n            type=\"submit\"\n          >\n            Sign in\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { LoginComponent } from '../../components/Login/Login';\n\nexport interface LoginPageProps {\n  username?: string;\n  password?: string;\n}\n\nconst handleLoginSubmit = (...args: any) => {\n  console.log(...args);\n};\n\nconst LoginPage: React.FC<LoginPageProps> = () => (\n  <div className=\"login-page\">\n    <div className=\"login-page__container\">\n      <h3 className=\"login-page__heading\">Please Sign In</h3>\n\n      <LoginComponent onSubmit={handleLoginSubmit} />\n    </div>\n  </div>\n);\n\nexport default LoginPage;\n","import React, { useEffect } from 'react';\nimport { Route, BrowserRouterProps } from 'react-router-dom';\nimport nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\nexport interface PrivateRouteProps extends BrowserRouterProps {\n  component: React.FC;\n  path: string;\n  exact?: any;\n}\n\nexport const LoadingRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  nprogress.start();\n\n  useEffect(() => {\n    nprogress.done();\n  });\n\n  return (\n    <Route\n      {...rest}\n      render={(props: any) => <Component {...props} {...rest} />}\n    />\n  );\n};\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { withStore } from '../../context';\nimport { RoutingEnum } from '../routing.enum';\nimport { PrivateRoute } from '../PrivateRoute/PrivateRoute';\nimport LoginPage from '../../pages/Login';\nimport { LoadingRoute } from '../LoadingRoute/LoadingRoute';\n\nexport const Content = withStore((props: any) => {\n  return (\n    <Switch>\n      <LoadingRoute\n        exact\n        path={RoutingEnum.home}\n        component={() => <div>hello world</div>}\n      />\n      <LoadingRoute path={RoutingEnum.about} component={() => <div>about</div>} />\n      <LoadingRoute path={RoutingEnum.login} component={LoginPage} />\n      <PrivateRoute\n        path={RoutingEnum.private}\n        component={() => <div>private</div>}\n      />\n    </Switch>\n  );\n});\n","import React from 'react';\nimport logo from '../../logo.svg';\nimport { Link } from 'react-router-dom';\nimport { RoutingEnum } from '../../routing/routing.enum';\n\nexport interface HeaderProps {\n  title?: string;\n  paragraph?: string;\n}\n\nexport const Header: React.FC<HeaderProps> = () => (\n  <header className=\"header\">\n    <div className=\"header__container\">\n      <img src={logo} className=\"header__logo\" alt=\"logo\" />\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <Link to={RoutingEnum.home} className={'nav-link text-white'}>\n            Home\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to={RoutingEnum.about} className={'nav-link text-white'}>\n            About\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to={RoutingEnum.private} className={'nav-link text-white'}>\n            Modules\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { PageContainer } from './layout/PageContainer';\nimport { createStore } from './context';\nimport { load, SPQ_SESSION_STORAGE } from './helpers/session-storage';\nimport { events } from './context/events';\nimport { Content } from './routing/Content';\nimport { Header } from './layout/Header/Header';\n\nconst App: React.FC = () => {\n  const { GlobalStore }: any = createStore({\n    initialState: {\n      token: load(SPQ_SESSION_STORAGE.TOKEN, false)\n      // application: load(SPQ_SESSION_STORAGE.APPLICATION)\n    },\n    events\n  });\n\n  return (\n    <GlobalStore>\n      <Router>\n        <Header />\n        <PageContainer>\n          <Content />\n        </PageContainer>\n      </Router>\n    </GlobalStore>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}